// <auto-generated />
using EmployeeManagement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230626085240_Integrated Db Addition new")]
    partial class IntegratedDbAdditionnew
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement.Models.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignationId"));

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("DesignationId");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("PaymentRuleId")
                        .HasColumnType("int");

                    b.Property<int>("WorkHourId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("PaymentRuleId");

                    b.HasIndex("WorkHourId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeManagement.Models.PaymentRule", b =>
                {
                    b.Property<int>("PaymentRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentRuleId"));

                    b.Property<string>("PaymentRuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PaymentRuleId");

                    b.ToTable("PaymentRules");
                });

            modelBuilder.Entity("EmployeeManagement.Models.WorkHours", b =>
                {
                    b.Property<int>("WorkHourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkHourId"));

                    b.Property<int>("WorkHour")
                        .HasColumnType("int");

                    b.HasKey("WorkHourId");

                    b.ToTable("WorkHours");
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.HasOne("EmployeeManagement.Models.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagement.Models.PaymentRule", "PaymentRule")
                        .WithMany()
                        .HasForeignKey("PaymentRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagement.Models.WorkHours", "WorkHour")
                        .WithMany()
                        .HasForeignKey("WorkHourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designation");

                    b.Navigation("PaymentRule");

                    b.Navigation("WorkHour");
                });
#pragma warning restore 612, 618
        }
    }
}
